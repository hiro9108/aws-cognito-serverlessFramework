service: cognito-demo

frameworkVersion: "2"

# custom:
#   environment:
#     serverlessIfElse:
# - If: '"${self:provider.stage}" == "dev"'
#     Exclude:
#       - plugins.serverless-offline
# dev: ${file(./environment/dev.yml)}
# prd: ${file(./environment/prd.yml)}

provider:
  name: aws
  runtime: python3.8
  stage: ${opt:stage, 'dev'}
  region: ca-central-1
  # iamRoleStatements:
  #   - Effect: "Allow"
  #     Action:
  #       - dynamodb:Query
  #       - dynamodb:Scan
  #       - dynamodb:GetItem
  #       - dynamodb:PutItem
  #       - dynamodb:UpdateItem
  #     Resource:
  #       Fn::GetAtt:
  #         - usersTable
  #         - Arn

# plugins:
#   - serverless-offline

package:
  patterns:
    # - "!environment/**"
    - "!node_modules/**"
    - "!public/**"
    - "!src/**"
    - "!.next/**"
    - "!.github/**"
    - "!.github/**"

functions:
  users:
    handler: api/users.users
    events:
      - http:
          path: /users
          method: GET
          cors: true
          # authorizer:
          #   type: COGNITO_USER_POOLS
          #   authorizerId: !Ref ApiGatewayAuthorizer

  courses:
    handler: api/courses.courses
    events:
      - http:
          path: /courses
          method: GET
          cors: true
          # authorizer:
          #   type: COGNITO_USER_POOLS
          #   authorizerId: !Ref ApiGatewayAuthorizer

  signup:
    handler: api/signup_handler.signup
    events:
      - http:
          path: /signup
          method: POST
          cors: true
          # authorizer:
          #   type: COGNITO_USER_POOLS
          #   authorizerId: !Ref ApiGatewayAuthorizer

  mock:
    handler: api/mock.mock
    events:
      - http:
          path: /mock
          method: GET
          cors: true
          # authorizer:
          #   type: COGNITO_USER_POOLS
          #   authorizerId: !Ref ApiGatewayAuthorizer

  app:
    handler: api/app.lambda_handler
    events:
      - http:
          path: /app
          method: GET
          cors: true
          # authorizer:
          #   type: COGNITO_USER_POOLS
          #   authorizerId: !Ref ApiGatewayAuthorizer

  auth:
    handler: api/auth.auth
    events:
      - http:
          path: /auth
          method: GET
          cors: true
          # authorizer:
          #   type: COGNITO_USER_POOLS
          #   authorizerId: !Ref ApiGatewayAuthorizer

resources:
  - ${file(./resources/cognito.yml)}
  - ${file(./resources/apigateway-authorizer.yml)}
  - ${file(./resources/dynamodb.yml)}
